@startuml database

legend top left
    | Symbol | Type |
    |<#808000>    D| Dimension |
    |<#FF0000>    F| Fact |
end legend

class people <<(D,olive)>> {
  People registered on the platform
  ==
  #id : ulid(26)
  first_name : varchar(255)
  last_name : varchar(255)
  +email : varchar(255)
  +phone_number : varchar(255)
  pin : char(4)
  +organization_id : smallint()
  password_hash : varchar(72)
  registered_at : timestamp(5)
  roles : json
}

person_confirmations "0..*" --> "1" people
people "0..*" --> "1" organizations

class organizations <<(D,olive)>> {
    Organizations which could monitor the elections.
    ==
    #id : smallint
    name: varchar(255)
}

class person_confirmations <<(F,red)>> {
    Confirmations of email address or phone number
    ==
    #id : ulid(26)
    +person_id : ulid(26)
    +type : enum(email, phone_number)
    code : char(8)
    expires_at : timestamp(5)
    confirmed_at : timestamp(5)
}

class sections <<(D,olive)>> {
    Sections in the election
    ==
    #id : char(9)
    +country_id : char(2)
    +election_region_id : char(2)
    +municipality_id : char(2)
    +town_id : smallint
    +region_id : char(2)
    +code : char(3)
}

sections "1..*" --> "1" countries
sections "1..*" --> "1" election_regions
sections "1..*" --> "1" municipalities
sections "1..*" --> "1" regions
sections "1..*" --> "1" towns

class protocols <<(D,olive)>> {
    Protocols submitted to the platform
    ==
    #id : ulid(26)
    +type : enum(section, election_region)
    +origin : (ti_broish, cik)
    +election_region_id : char(2)
    +section : char(9)
    +status : enum(submitted, approved, rejected, processed)
}

protocols "0..*" --> "1" sections
protocols "0..*" --> "1" election_regions

class protocol_data <<(D,olive)>> {
    Numeric data from the protocols
    ==
    #id : ulid(26)
    protocol_id : ulid(26)
    data : json
    created_at : timestamp(5)
}

protocol_data "0..1" --> "1" protocols

class protocol_actions <<(F,red)>> {
    Actions applied to protocols
    ==
    #id : ulid(26)
    +actor_id : ulid(26)
    +protocol_id : ulid(26)
    +action : enum(submitted, edited, approved, rejected, processed)
    timestamp : timestamp(5)
}

protocol_actions "0..*" --> "1" protocols
protocol_actions "0..*" --> "1" people

class reports <<(D,olive)>> {
    Reports sent about election issues
    ==
    #id : ulid(26)
    +section : char(9)
    +election_region_id : char(2)
    submitter_id : ulid(26)
    description : text
}

reports "0..*" --> "1" sections
reports "0..*" --> "1" election_regions

class report_updates <<(F,red)>> {
    Status updates to reports
    ==
    #id : ulid(26)
    +report_id : ulid(26)
    status : enum(submitted, accepted, rejected, published)
    actor_id : ulid(26)
    timestamp : timestamp(5)
}

report_updates "1..*" --> "1" reports

class pictures <<(D,olive)>> {
    Pictures of protocols and reports
    ==
    #id : ulid(26)
    submitter_id : ulid(26)
    path : varchar(255)
    sort_position : smallint
    created_at : timestamp(5)
}

pictures "0..*" --> "1" people

class reports_pictures <<(F,red)>> {
    Join table for the multiple pictures of a report
    ==
    +report_id : ulid(26)
    +picture_id : ulid(26)
}

reports_pictures "0..1" --> "1" pictures
reports_pictures "0..*" --> "1" reports

class protocols_pictures <<(F,red)>> {
    Join table for the multiple pictures of a protocol
    ==
    +protocol_id : ulid(26)
    +picture_id : ulid(26)
}

protocols_pictures "0..1" --> "1" pictures
protocols_pictures "1..*" --> "1" protocols

class election_regions <<(D,olive)>> {
    Multi-mandate election regions including one abroad
    ==
    #code : char(2)
    name : varchar(255)
}

class countries <<(D,olive)>> {
    Countries with sections
    ==
    #code : char(2)
    name : varchar(255)
}

class municipalities <<(D,olive)>> {
    Municipalities domestically
    ==
    #code : char(2)
    name : varchar(255)
    election_region_id : char(2)
}

municipalities "0..*" --> "1" election_regions

class towns <<(D,olive)>> {
    Towns - both domestically and abroad
    ==
    #id : smallint
    name : varchar(255)
    +country_id : char(2)
    +election_region_id : char(2)
    +municipality_id : char(2)
}

towns "1..*" --> "1" countries
towns "1..*" --> "1" election_regions
towns "1..*" --> "0..1" municipalities

class regions <<(D,olive)>> {
    City regions
    ==
    #code : char(2)
    name : varchar(255)
    +municipality_id : char(2)
    +town_id : smallint
}

regions "0..*" --> "1" municipalities
regions "0..*" --> "1" towns

@enduml